plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.1'
    id 'io.spring.dependency-management' version '1.1.5'
    id 'war'
}

group = 'com.org'
version = '0.0.1-Development'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
    maven { url 'https://repo.spring.io/milestone' }
    maven { url 'https://repo.spring.io/snapshot' }
    gradlePluginPortal()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-aop'
    implementation 'org.slf4j:slf4j-api'
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.3.0'
    implementation 'io.jsonwebtoken:jjwt-api:0.12.3'
    implementation 'org.bouncycastle:bcprov-jdk18on:1.77'
    implementation 'com.google.guava:guava:33.1.0-jre'
    implementation 'commons-io:commons-io:2.16.1'
    implementation 'commons-beanutils:commons-beanutils:1.9.4'
    implementation 'org.springframework.boot:spring-boot-starter-websocket:3.3.1'
    implementation 'org.apache.commons:commons-lang3:3.16.0'
    implementation 'io.lettuce:lettuce-core:6.4.0.RELEASE'
    implementation 'org.springframework.boot:spring-boot-starter-data-redis:3.3.4'
    implementation 'org.springframework.data:spring-data-redis:3.3.4'


    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.12.3'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.12.3'
    annotationProcessor 'org.projectlombok:lombok'
    annotationProcessor 'jakarta.persistence:jakarta.persistence-api:3.1.0'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
}

tasks.named('test') {
    useJUnitPlatform()
}

bootJar {
    enabled = false
}

// Build war command: ./gradlew build
bootWar {
    enabled = true
}

war {
    archiveFileName = 'work-flow.war'
}
